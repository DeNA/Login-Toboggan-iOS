//
//  MBCMobage.h
//  mobage-ndk
//
//  Copyright (c) 2012, DeNA Co., Ltd. All rights reserved
//
//

#ifndef MBCMOBAGE_H_
#define MBCMOBAGE_H_

#include "MBCStandardTypes.h"
#include "MBCError.h"

#ifdef __cplusplus
extern "C" {
#endif

#pragma mark Enums / Bitfields
/**
 * Enumeration of Mobage server environments that an app can use.
 * @region Common
 */
typedef enum {
	/**
	 *
	 * Production environment.
	 * Use this environment when you are ready to submit your app to Mobage for publication.
	 */
	MBCServerEnvironmentProduction = 0, 
	/**
	 *
	 * Sandbox environment.
	 * Use this environment for testing your app.
	 */
	MBCServerEnvironmentSandbox = 1
} MBCServerEnvironment;
#define IsMBCServerEnvironment(intFlag) (!((intFlag < 0) || (intFlag > 1)))

	#pragma mark - Notifications
	typedef struct {
		volatile int32_t __CAPI_REFCOUNT; // VERY INTERNAL
		void * __CAPI_NATIVEREF; // ALSO VERY INTERNAL
		
		MBC_Common_IsActive(bool visible);
	} MBCMobageUIVisibleNotification;
	
	MBCMobageUIVisibleNotification * MBCConstructMobageUIVisibleNotification(void * __CAPI_NATIVEREF);
	void MBCFillStructMobageUIVisibleNotification(void * structObj, void * __CAPI_NATIVEREF);
	
	MBCRetainPrototype(MobageUIVisibleNotification);
	MBCReleasePrototype(MobageUIVisibleNotification);
	
	/**
	 * MBCMobageUIVisibleNotificationObserverCallback
	 * @description 	 * Notification that the Mobage SDK has shown or hidden a Mobage UI component, such as the user profile screen or Bank dialog.
	 * Your app receives this notification at the following times:
	 * <ul>
	 * <li>Immediately before a Mobage UI component is displayed.</li>
	 * <li>Immediately after a Mobage UI component is completely removed from the screen.</li>
	 * </ul>
	 * Your app may receive this notification more than once within a short time. The most recent
	 * notification is the most accurate.
	 * <p>
	 * Your app will not receive this notification for UI components that are intended to be
	 * displayed as part of your app, such as the Balance Button.
	 */
	typedef void (*MBCMobageUIVisibleNotificationObserverCallback)(
		void * context,
		/*AUTORELEASED*/MBCMobageUIVisibleNotification * notification
	);

	void MBCMobageUIVisibleNotification_registerObserver(void * context, MBCMobageUIVisibleNotificationObserverCallback callback);
	void MBCMobageUIVisibleNotification_deregisterObserver(void * context);
	
	#pragma mark - Method Callbacks!
	/**
	 * MBCMobage_getMobageVendorIdCallback
	 * @description 	 Callback for retrieving the Mobage Vendor ID.
	 * @cb-param MBCSimpleAPIStatus status Information about the result of the request.			
	 * @cb-param MBCError * error Information about the error, or <c>null</c> if there was no error.			AUTORELEASED
	 * @cb-param const char * mvid Mobage Vendor ID.			AUTORELEASED
	 */
	typedef void (*MBCMobage_getMobageVendorIdCallback)(
				MBCSimpleAPIStatus status,
				/*AUTORELEASED*/ MBCError * error,
				/*AUTORELEASED*/ const char * mvid,
				
				void * context
																);
	/**
	 * MBCMobage_getSDKVersionCallback
	 * @description 	 Callback for retrieving the Mobage SDK Version.
	 * @cb-param MBCSimpleAPIStatus status Information about the result of the request.			
	 * @cb-param MBCError * error Information about the error, or <c>null</c> if there was no error.			AUTORELEASED
	 * @cb-param const char * sdkVersion Mobage Unity SDK version.			AUTORELEASED
	 */
	typedef void (*MBCMobage_getSDKVersionCallback)(
				MBCSimpleAPIStatus status,
				/*AUTORELEASED*/ MBCError * error,
				/*AUTORELEASED*/ const char * sdkVersion,
				
				void * context
																);
	
	#pragma mark - Static Methods
	/**
	 * MBCMobage_initializeMobageWithStandardParameters
	 * @function
	 * @public
	 * @description 	 * Initialize the Mobage service, and report a Mobage analytics event indicating that the app has started.
	 * Call this method immediately after your app starts.
	 * <p>
	 * <strong>Important</strong>: Call this method only once.
	 *
	 * @param MBCServerEnvironment  serverEnvironment Indicates whether to connect to Mobage's sandbox or production environment. Contains an enumerated value of Mobage::ServerEnvironment. <strong>Important</strong>: Before you submit your app to Mobage for review, you must change this value to refer to Mobage's production environment.			
	 * @param const char *  appId The app ID, also known as the "app key." Generated by the <a href="https://developer.mobage.com/">Mobage Developer Portal</a>.			AUTORELEASED
	 * @param const char *  appVersion The app version.			AUTORELEASED
	 * @param const char *  consumerKey The app's OAuth key for accessing the Mobage service. Generated by the <a href="https://developer.mobage.com/">Mobage Developer Portal</a>.			AUTORELEASED
	 * @param const char *  consumerSecret The app's OAuth secret for accessing the Mobage service. Generated by the <a href="https://developer.mobage.com/">Mobage Developer Portal</a>.			AUTORELEASED
	 * <br/>
	 * 
	 */
	void MBCMobage_initializeMobageWithStandardParameters(
										MBCServerEnvironment  serverEnvironment,
										const char *  appId,
										const char *  appVersion,
										const char *  consumerKey,
										const char *  consumerSecret,
										
										void * context	//Arbitrary Context Object, which will be passed back to callbacks
						   );
	/**
	 * MBCMobage_getMobageVendorId
	 * @function
	 * @public
	 * @description 	 * Retrieve the Mobage Vendor ID, which is a unique identifier for the device running your app.
	 * The identifier is unique across devices for apps published on Mobage.
	 *
	 * @cb GetMobageVendorIdOnCompleteCallback  onComplete Callback for retrieving the Mobage Vendor ID.			
	 * @cb-param MBCSimpleAPIStatus status Information about the result of the request.			
	 * @cb-param MBCError * error Information about the error, or <c>null</c> if there was no error.			AUTORELEASED
	 * @cb-param const char * mvid Mobage Vendor ID.			AUTORELEASED
	 * <br/>
	 * 
	 */
	void MBCMobage_getMobageVendorId(
										MBCMobage_getMobageVendorIdCallback onComplete,
										
										void * context	//Arbitrary Context Object, which will be passed back to callbacks
						   );
	/**
	 * MBCMobage_getSDKVersion
	 * @function
	 * @public
	 * @description 
	 *
	 * @cb GetSDKVersionOnCompleteCallback  onComplete Callback for retrieving the Mobage SDK Version.			
	 * @cb-param MBCSimpleAPIStatus status Information about the result of the request.			
	 * @cb-param MBCError * error Information about the error, or <c>null</c> if there was no error.			AUTORELEASED
	 * @cb-param const char * sdkVersion Mobage Unity SDK version.			AUTORELEASED
	 * <br/>
	 * 
	 */
	void MBCMobage_getSDKVersion(
										MBCMobage_getSDKVersionCallback onComplete,
										
										void * context	//Arbitrary Context Object, which will be passed back to callbacks
						   );


#ifdef __cplusplus
}
#endif

#endif /* MBCMOBAGE_H_ */

